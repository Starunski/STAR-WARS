{"version":3,"sources":["components/header/2.png","components/error-indicator/star-wars.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spiner/index.js","components/spiner/spiner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-detail/index.js","components/person-detail/person-detail.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","src","logo","class","href","SwapiService","_apiBase","_transformPlanet","planet","id","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformSpaceship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","eyeColor","url","fetch","this","res","ok","Error","status","json","getResource","results","map","item","match","Spiner","ErrorIndicator","icon","RandomPlanet","swapiServise","SwapiServise","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","console","log","Math","floor","random","getPlanet","then","catch","interval","setInterval","hasData","errorMessage","spiner","content","Component","PlanetView","Fragment","ItemList","swapiService","peopleList","getAllPeople","arr","key","onClick","props","onItemSelected","items","renderItems","PersonalDetail","updatePerson","prevProps","personId","getPerson","App","showRenderPlanet","selectedPerson","onPersonSelected","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddeb1264.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2.9e052025.png\";","module.exports = __webpack_public_path__ + \"static/media/star-wars.4f0533c3.png\";","import Header from './header'\n\n\nexport default Header","import React from \"react\";\nimport \"./header.css\";\nimport logo from './2.png'\n\nconst Header = () => {\n  return (\n    <div className=\"header \" >\n      <div><h1> <img src={logo} className='logo'/> </h1></div>\n      <ul className=\"nav \">\n        <li className=\"nav-item\">\n          <a class=\"nav-link active\" href=\"#\">\n            People\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a class=\"nav-link active\" href=\"#\">\n            Planet\n          </a>\n        </li>\n        <li className=\"nav-item\">\n        <a class=\"nav-link active\" href=\"#\">\n        Starship\n          </a></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","export default class SwapiService {\n\n  _apiBase = `https://swapi.dev/api`;\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`your error / could not fetch  ${url}, received ${res.status}`);\n    }\n    return await res.json();\n  }\n  //--\n  async getAllPeople() {\n    const res = await this.getResource(`/people/`);\n    return res.results.map(this._transformPerson);\n  }\n  async getPerson(id) {\n   const person = await this.getResource(`/people/${id}/`);\n   return this._transformPerson(person)\n  }\n  //--\n  async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n  //--\n  async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map(this._transformSpaceship);\n  }\n  async getStarship(id) {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformSpaceship(starship)\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet = (planet) => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformSpaceship = (starship) => {\n    return{\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    }\n  }\n\n  _transformPerson = (person) => {\n    return{\n      id: this._extractId(person),\n      name:person.name,\n      gender: person.gender,\n      birthYear: person.birthYear,\n      eyeColor: person.eyeColor\n    }\n  }\n\n}\n\n// const swapi = new SwapiService();\n\n// swapi.getPlanet(4).then((planet) => {\n//   console.log(planet);\n// });\n\n// swapi.getAllPlanets().then((body) => {\n//   console.log(body);\n// });\n","import Spiner from './spiner'\n\n\nexport default Spiner","import React from \"react\";\nimport \"./spiner.css\";\n\nconst Spiner = () => {\n  return (\n\n    <div className=\" loadingio-spinner-double-ring-iu9f1loi92r \">\n      <div className=\"ldio-3bn2fity463\">\n        <div></div>\n        <div></div>\n        <div>\n          <div></div>\n        </div>\n        <div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Spiner;\n","import ErrorIndicator from './error-indicator'\n\n\nexport default ErrorIndicator","import React from \"react\";\nimport \"./error-indicator.css\";\nimport icon from './star-wars.png'\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator \" >\n    \n     <h5 className='boom'>  <img src={icon} className='icon-error' />   BOOM! </h5>\n     <span>something has gone terribly wrong</span>\n     <p>(but we already sent droids to fix it)</p>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from \"react\";\nimport \"./random-planet.css\";\nimport SwapiServise from \"../../services/swapi-service\";\nimport Spiner from \"../spiner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class RandomPlanet extends Component {\n  swapiServise = new SwapiServise();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false,\n  };\n\n\n \n  componentDidMount(){\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 7700);\n      //  clearInterval(this.interval)\n   \n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n      error: false,\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  updatePlanet = () => {\n    console.log ('Update')\n    const id = Math.floor(Math.random() * 20) + 3;\n    this.swapiServise\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    console.log('render')\n    const { planet, loading, error } = this.state;\n\n    const hasData = !(loading || error);\n\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const spiner = loading ? <Spiner /> : null;\n    const content = hasData ? <PlanetView planet={planet} /> : null;\n\n    if (loading) {\n      return <Spiner />;\n    }\n\n    return (\n      <div className=\"random-planet\">\n        {errorMessage}\n        {spiner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ planet }) => {\n  const { id, name, population, rotationPeriod, diameter } = planet;\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <img\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n          className=\"card-img-top planet-image\"\n        ></img>\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Name : {name}</h5>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">Population : {population} </li>\n            <li class=\"list-group-item\">RotationPeriod : {rotationPeriod} </li>\n            <li class=\"list-group-item\">Diameter : {diameter} </li>\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n","import RandomPlanet from './random-planet'\n\nexport default RandomPlanet","import ItemList from './item-list'\n\n\nexport default ItemList","import React, { Component } from \"react\";\nimport \"./item-list.css\";\nimport SwapiService from \"../../services/swapi-service\";\nimport Spiner from \"../spiner\";\n\nexport default class ItemList extends Component {\n  swapiService = new SwapiService();\n  state = {\n    peopleList: null,\n  };\n\n  componentDidMount() {\n    this.swapiService.getAllPeople().then((peopleList) => {\n      this.setState({\n        peopleList,\n      });\n    });\n  }\n\n  renderItems(arr) {\n    return arr.map(({ name, id }) => {\n      return (\n        <li className=\"list-group-item\" key={id} onClick={()=> this.props.onItemSelected(id)}>\n          {name}\n        </li>\n      );\n    });\n  }\n\n\n  render() {\n    const { peopleList } = this.state;\n    if (!peopleList) {\n      return <Spiner />;\n    }\n\n    const items = this.renderItems(peopleList);\n\n\n\n    return (\n      <div className=\"item-list item-list\">\n        <ul className=\"list-group\">{items}</ul>\n      </div>\n    );\n  }\n}","import PersonalDetail from './person-detail'\n\nexport default PersonalDetail","import React, { Component } from \"react\";\nimport \"./person-detail.css\";\nimport SwapiService from \"../../services/swapi-service\";\n\nexport default class PersonDetail extends Component {\n  swapiServise = new SwapiService();\n\n  state = {\n    person: null,\n  };\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.personId !== prevProps.personId){\n      this.updatePerson()\n    }\n  }\n\n  updatePerson() {\n    const { personId } = this.props;\n    if (!personId) {\n      return;\n    }\n    this.swapiServise.getPerson(personId).then((person) => {\n      this.setState({ person });\n    });\n  }\n\n  render() {\n    if (!this.state.person) {\n      return <span>Select a person from a list</span>;\n    }\n    const { id, name, gender, birthYear, eyeColor } = this.state.person;\n\n    return (\n      <div className=\"personal-detail\">\n        <div className=\"card\">\n          <img\n            src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\n            className=\"card-img-top personal-image\"\n          ></img>\n\n          <div className=\"card-body\">\n    <h5 className=\"card-title\"> name {name} /  {this.props.personId} </h5>\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item\">Gender: {gender}</li>\n              <li class=\"list-group-item\">Date of Birthday: {birthYear}</li>\n              <li class=\"list-group-item\">Eye colorred: {eyeColor}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import App from './App'\n\nexport default App","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"../header\";\nimport RandomPlanet from \"../random-planet\";\nimport ItemList from \"../item-list\";\nimport PersonDetail from \"../person-detail\";\n\nexport default class App extends Component {\n    state = {\n        showRenderPlanet:true,\n        selectedPerson: 1\n    }\n\n\nonPersonSelected = (id) => {\n    this.setState({\n        selectedPerson: id\n    })\n}\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <RandomPlanet />\n\n        <div className=\"row mb2\">\n          <div className=\"col-md-6\">\n            <ItemList onItemSelected = {this.onPersonSelected}/>\n          </div>\n          <div className=\"col-md-6\">\n            <PersonDetail  personId = {this.state.selectedPerson}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport App from './components/App'\n\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}